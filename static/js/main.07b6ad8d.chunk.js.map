{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","errorMessage","handleClick","selectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","handleFilterChange","handleSearchTextChange","useState","searchText","setSearchText","onChange","event","status","target","value","placeholder","text","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","user","setUser","setErrorMessage","isLoading","setIsLoading","useEffect","fetchUser","a","response","Error","message","href","email","name","App","setTodos","filteredTodos","setFilteredTodos","showComponent","setShowComponent","setSelectedTodo","filterStatus","setFilterStatus","newFilteredTodos","filter","toLowerCase","includes","loadTodos","loadedTodos","todoId","foundTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b6ad8d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  errorMessage: string;\n  handleClick: (todoId: number) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<TodoListProps> = (\n  {\n    todos,\n    errorMessage,\n    handleClick,\n    selectedTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {errorMessage\n        ? <li>{errorMessage}</li>\n        : todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    classNames(\n                      {\n                        'has-text-danger': !completed,\n                        'has-text-success': completed,\n                      },\n                    )\n                  }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClick(id)}\n                >\n                  <span className=\"icon\">\n                    {selectedTodo && selectedTodo.id === id\n                      ? <i className=\"far fa-eye-slash\" />\n                      : <i className=\"far fa-eye\" />}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\n\ninterface TodoFilterProps {\n  handleFilterChange: (status: string) => void;\n  handleSearchTextChange: (text: string) => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = (\n  { handleFilterChange, handleSearchTextChange },\n) => {\n  const [searchText, setSearchText] = useState('');\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const text = event.target.value;\n\n    setSearchText(text);\n    handleSearchTextChange(text);\n  };\n\n  const handleClearSearch = () => {\n    setSearchText('');\n    handleSearchTextChange('');\n  };\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const status = event.target.value;\n\n    handleFilterChange(status);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleStatusChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchText\n          && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface TodoModalProps {\n  todo: Todo;\n  handleClick: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = (\n  { todo, handleClick },\n) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const [errorMessage, setErrorMessage] = useState<string>('User not found');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(userId);\n\n        setUser(response);\n        setIsLoading(false);\n      } catch (error) {\n        if (error instanceof Error) {\n          setErrorMessage(error.message);\n        }\n\n        setIsLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n            {errorMessage !== 'User not found' || !user\n              ? <p>{errorMessage}</p>\n              : (\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </p>\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [showComponent, setShowComponent] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [searchText, setSearchText] = useState('');\n\n  const handleFilterChange = (status: string) => {\n    setFilterStatus(status);\n  };\n\n  const handleSearchTextChange = (status: string) => {\n    setSearchText(status);\n  };\n\n  useEffect(() => {\n    const newFilteredTodos = todos.filter(todo => {\n      const { completed } = todo;\n\n      switch (filterStatus) {\n        case 'active':\n          return !completed;\n        case 'completed':\n          return completed;\n        default:\n          return true;\n      }\n    }).filter(todo => {\n      return todo.title.toLowerCase().includes(searchText.toLowerCase());\n    });\n\n    setFilteredTodos(newFilteredTodos);\n  }, [todos, filterStatus, searchText]);\n\n  const openTodos = (todoId: number) => {\n    setShowComponent(true);\n    const foundTodo = todos.find(todo => todo.id === todoId);\n\n    if (foundTodo) {\n      setSelectedTodo(foundTodo);\n    }\n  };\n\n  const closeTodos = () => {\n    setShowComponent(false);\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setTodos(loadedTodos);\n        setFilteredTodos(loadedTodos);\n        setIsLoading(false);\n      } catch (error) {\n        if (error instanceof Error) {\n          setErrorMessage(error.message);\n        }\n\n        setIsLoading(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilterChange={handleFilterChange} handleSearchTextChange={handleSearchTextChange} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList todos={filteredTodos} errorMessage={errorMessage} handleClick={openTodos} selectedTodo={selectedTodo} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {showComponent && selectedTodo && <TodoModal todo={selectedTodo} handleClick={closeTodos} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}